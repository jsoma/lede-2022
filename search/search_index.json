{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lede 2022 \u00b6 What should I be doing? \u00b6 It's the beginning, so you're probably interested in setting things up . Prep work \u00b6 Python's Not (Just) For Unicorns , a tutorial on Python Terminus , a game to teach you the command line Lazy Basics of HTML and CSS , an awful tutorial about building for the web Quick links \u00b6 These will only work for enrolled students, but if that's you go wild: Our CourseWorks/Canvas page Messageboard and term dictionary Recorded class sessions","title":"Home"},{"location":"#lede-2022","text":"","title":"Lede 2022"},{"location":"#what-should-i-be-doing","text":"It's the beginning, so you're probably interested in setting things up .","title":"What should I be doing?"},{"location":"#prep-work","text":"Python's Not (Just) For Unicorns , a tutorial on Python Terminus , a game to teach you the command line Lazy Basics of HTML and CSS , an awful tutorial about building for the web","title":"Prep work"},{"location":"#quick-links","text":"These will only work for enrolled students, but if that's you go wild: Our CourseWorks/Canvas page Messageboard and term dictionary Recorded class sessions","title":"Quick links"},{"location":"command-line/command-reference/","text":"Command reference \u00b6 These commands will work on both OS X and Windows, as long as Windows folks are using Cmder . Quick Tips for Being Lazy \u00b6 Press \u2191 and \u2193 to scroll through previous commands. It can save you a lot of typing. Instead of typing out a long file/directory name, type the first few letters and then press tab. It will automatically fill in the rest of the filename. Use this every time you\u2019re typing anything on the command line. On a Mac, you can drag a file or folder from Finder onto the Terminal and it will automatically type the full path Navigating directories and folders \u00b6 Warning Don\u2019t type the [] brackets when using the command - cd [dirname] means you\u2019ll type cd Documents . Command Description pwd \"Print working directory.\" Prints the directory you're in. Use this to check that you\u2019re in the directory you want cd [dirname] Changes directory, moves you into the folder named dirname cd .. Moves you up one directory, e.g. from Desktop/foundations/class-1 to Desktop/foundations . ls lists subdirectories (and files). ls -lah is nicer, though. find Tries to find a file without waiting for the database to update - can search by name, size, date modified, etc. This is a good reference Moving/editing/downloading files \u00b6 Warning Don\u2019t type the [] brackets when using the command - cd [dirname] means you\u2019ll type cd Documents . Command Description mv [source] [destination] Moves a file from one place to another cp [source] [destination] Copies a file from one place to another (so now you have two) rm [file] Deletes (removes) a file mkdir [directoryname] Creates a directory rmdir [directoryname] Deletes (removes) a directory tar cvf [filename] [filename] [filename]... Compresses (zips) files up into a .tar.gz file tar xvf [filename] Extracts (unzips) a .tar.gz file curl [url] Downloads a file, but streams it into your terminal window curl -O [url] Downloads a file, saving it wget [url] Downloads a file, saving it (yes, curl and wget are pretty similar) same (need to instal wget ) Looking at individual files \u00b6 Warning Don\u2019t type the [] brackets when using the command - cd [dirname] means you\u2019ll type cd Documents . Command Description cat [filename] Displays the contents of a file wc [filename] Displays the word count of a file wc -l [filename] Displays the line count of a file head -n 10 [filename] Displays the first 10 lines of a file tail -n 20 [filename] Displays the last 20 lines of a file more [filename] Displays the contents of a file one screen at a time (spacebar to continue) grep [text] [filename] Show all of the lines in filename that contain text sort Sorts the lines of a file uniq Removes duplicate adjacent lines of a file","title":"Command reference"},{"location":"command-line/command-reference/#command-reference","text":"These commands will work on both OS X and Windows, as long as Windows folks are using Cmder .","title":"Command reference"},{"location":"command-line/command-reference/#quick-tips-for-being-lazy","text":"Press \u2191 and \u2193 to scroll through previous commands. It can save you a lot of typing. Instead of typing out a long file/directory name, type the first few letters and then press tab. It will automatically fill in the rest of the filename. Use this every time you\u2019re typing anything on the command line. On a Mac, you can drag a file or folder from Finder onto the Terminal and it will automatically type the full path","title":"Quick Tips for Being Lazy"},{"location":"command-line/command-reference/#navigating-directories-and-folders","text":"Warning Don\u2019t type the [] brackets when using the command - cd [dirname] means you\u2019ll type cd Documents . Command Description pwd \"Print working directory.\" Prints the directory you're in. Use this to check that you\u2019re in the directory you want cd [dirname] Changes directory, moves you into the folder named dirname cd .. Moves you up one directory, e.g. from Desktop/foundations/class-1 to Desktop/foundations . ls lists subdirectories (and files). ls -lah is nicer, though. find Tries to find a file without waiting for the database to update - can search by name, size, date modified, etc. This is a good reference","title":"Navigating directories and folders"},{"location":"command-line/command-reference/#movingeditingdownloading-files","text":"Warning Don\u2019t type the [] brackets when using the command - cd [dirname] means you\u2019ll type cd Documents . Command Description mv [source] [destination] Moves a file from one place to another cp [source] [destination] Copies a file from one place to another (so now you have two) rm [file] Deletes (removes) a file mkdir [directoryname] Creates a directory rmdir [directoryname] Deletes (removes) a directory tar cvf [filename] [filename] [filename]... Compresses (zips) files up into a .tar.gz file tar xvf [filename] Extracts (unzips) a .tar.gz file curl [url] Downloads a file, but streams it into your terminal window curl -O [url] Downloads a file, saving it wget [url] Downloads a file, saving it (yes, curl and wget are pretty similar) same (need to instal wget )","title":"Moving/editing/downloading files"},{"location":"command-line/command-reference/#looking-at-individual-files","text":"Warning Don\u2019t type the [] brackets when using the command - cd [dirname] means you\u2019ll type cd Documents . Command Description cat [filename] Displays the contents of a file wc [filename] Displays the word count of a file wc -l [filename] Displays the line count of a file head -n 10 [filename] Displays the first 10 lines of a file tail -n 20 [filename] Displays the last 20 lines of a file more [filename] Displays the contents of a file one screen at a time (spacebar to continue) grep [text] [filename] Show all of the lines in filename that contain text sort Sorts the lines of a file uniq Removes duplicate adjacent lines of a file","title":"Looking at individual files"},{"location":"command-line/opening/","text":"Opening the command line \u00b6 The command line has many names and types: terminal, shell, CLI, command prompt, bash, zsh... the list goes on and one. You don't need to know any of that to open it, though. OS X Windows Click the maginifying class in the upper-right corner of your computer, and search for Terminal . Run it. Click the start menu, search for Cmder , and run it. If you don't have it, install it . Warning To make things confusing, there are like sixty different command lines on Windows, including PowerShell and the Command Prompt. You should use Cmder, though, because it uses the normal/common/typical commands you'll see all over the internet. Welcome to the command line!","title":"Opening the command line"},{"location":"command-line/opening/#opening-the-command-line","text":"The command line has many names and types: terminal, shell, CLI, command prompt, bash, zsh... the list goes on and one. You don't need to know any of that to open it, though. OS X Windows Click the maginifying class in the upper-right corner of your computer, and search for Terminal . Run it. Click the start menu, search for Cmder , and run it. If you don't have it, install it . Warning To make things confusing, there are like sixty different command lines on Windows, including PowerShell and the Command Prompt. You should use Cmder, though, because it uses the normal/common/typical commands you'll see all over the internet. Welcome to the command line!","title":"Opening the command line"},{"location":"command-line/tildes-pipes-redirects/","text":"Tildes, pipes and redirects \u00b6 The home directory \u00b6 The symbol ~ stands for your home directory . This is usually /Users/username on a Mac and something like c:\\Users\\username on a PC. You can use this to always make sure you're talking about the right place without typing too much. cd ~/Desktop will always take you right to your desktop cd ~/Downloads will always take you right to your downloads folder code ~/.bash_profile will maybe use Visual Studio Code to open the file named .bash_profile that is sitting in your home directory. So: when I say \"home\" you think \" ~ \" Redirecting output with > \u00b6 You can use > to take the output of a command (or a list of commands) and save it to a file. It's called redirecting output . It's nice. Let's say we want to find all of the lines in animals.txt that mention \"camel\" and save it to camels.txt. First we grep to display the lines, then we use > to redirect the output to a file. grep camel animals.txt > camel.txt Let's say our p key was broken, so we unfortunately could not use the cp (copy) command. Because we're practically geniuses, we could use cat and > instead. cat will display the entire file, then > will save that output into your file (a.k.a. redirect it to the file). cat animals.txt > animals2.txt Maybe a cunning yet overly nosy professor wants to know everything you've been typing on the command line. The history command displays your last however-many commands you've typed. Maybe he asks you to save your history to a file called history.txt on your Desktop. history > ~/Desktop/history.txt Piping between commands with | \u00b6 Piping - using a | - is taking the output from one command and sending it to another. On my keyboard, the pipe is the character you get when you hold shift and press \\ . Example 1 \u00b6 Things we know: We can use grep dog animals.txt to see all of the lines inside of animals.txt that contain the text dog. We can use wc -l animals.txt to count the lines inside of animals.txt But what if we want to find the lines that contain dog , and then count those lines? Piping, obviously! grep dog animals.txt | wc -l Example 2 \u00b6 Things we know: We can use cat names.txt to view a list of names in the names.txt file We can use uniq names.txt to get rid of adjacent lines that are the same We can use sort names.txt to put the names in alphabetical order Maybe we want to see a list of every name in names.txt, but no repeats. We can't just use uniq, because it only removes repeats next to each other. We need to sort the list of names and then get rid of repeats. cat names.txt | sort | uniq You could also just do sort names.txt | uniq And if you wanted to see how many times each name appears? You could add the -c (count) flag to uniq. sort names.txt | uniq -c","title":"Tildes, pipes and redirects"},{"location":"command-line/tildes-pipes-redirects/#tildes-pipes-and-redirects","text":"","title":"Tildes, pipes and redirects"},{"location":"command-line/tildes-pipes-redirects/#the-home-directory","text":"The symbol ~ stands for your home directory . This is usually /Users/username on a Mac and something like c:\\Users\\username on a PC. You can use this to always make sure you're talking about the right place without typing too much. cd ~/Desktop will always take you right to your desktop cd ~/Downloads will always take you right to your downloads folder code ~/.bash_profile will maybe use Visual Studio Code to open the file named .bash_profile that is sitting in your home directory. So: when I say \"home\" you think \" ~ \"","title":"The home directory"},{"location":"command-line/tildes-pipes-redirects/#redirecting-output-with","text":"You can use > to take the output of a command (or a list of commands) and save it to a file. It's called redirecting output . It's nice. Let's say we want to find all of the lines in animals.txt that mention \"camel\" and save it to camels.txt. First we grep to display the lines, then we use > to redirect the output to a file. grep camel animals.txt > camel.txt Let's say our p key was broken, so we unfortunately could not use the cp (copy) command. Because we're practically geniuses, we could use cat and > instead. cat will display the entire file, then > will save that output into your file (a.k.a. redirect it to the file). cat animals.txt > animals2.txt Maybe a cunning yet overly nosy professor wants to know everything you've been typing on the command line. The history command displays your last however-many commands you've typed. Maybe he asks you to save your history to a file called history.txt on your Desktop. history > ~/Desktop/history.txt","title":"Redirecting output with &gt;"},{"location":"command-line/tildes-pipes-redirects/#piping-between-commands-with","text":"Piping - using a | - is taking the output from one command and sending it to another. On my keyboard, the pipe is the character you get when you hold shift and press \\ .","title":"Piping between commands with |"},{"location":"command-line/tildes-pipes-redirects/#example-1","text":"Things we know: We can use grep dog animals.txt to see all of the lines inside of animals.txt that contain the text dog. We can use wc -l animals.txt to count the lines inside of animals.txt But what if we want to find the lines that contain dog , and then count those lines? Piping, obviously! grep dog animals.txt | wc -l","title":"Example 1"},{"location":"command-line/tildes-pipes-redirects/#example-2","text":"Things we know: We can use cat names.txt to view a list of names in the names.txt file We can use uniq names.txt to get rid of adjacent lines that are the same We can use sort names.txt to put the names in alphabetical order Maybe we want to see a list of every name in names.txt, but no repeats. We can't just use uniq, because it only removes repeats next to each other. We need to sort the list of names and then get rid of repeats. cat names.txt | sort | uniq You could also just do sort names.txt | uniq And if you wanted to see how many times each name appears? You could add the -c (count) flag to uniq. sort names.txt | uniq -c","title":"Example 2"},{"location":"python/running-programs/","text":"Running Python from the command line \u00b6 I made a tutorial for you! How sweet. It's called How to write Python in Visual Studio Code and run it in Terminal and even though it's based on OS X it's useful for both Windows and Mac users.","title":"Running Python from the command line"},{"location":"python/running-programs/#running-python-from-the-command-line","text":"I made a tutorial for you! How sweet. It's called How to write Python in Visual Studio Code and run it in Terminal and even though it's based on OS X it's useful for both Windows and Mac users.","title":"Running Python from the command line"},{"location":"setup/cmder-and-vs-code/","text":"Integrating Cmder with VS Code \u00b6 Windows only This is for Windows users only! All credit goes to Kelly Kiki for the walkthrough. We want to set Cmder as the default shell in VS Code. First, open up VS Code. Then click File (first tab on the top menu) > Preferences > Settings. Using the search bar up at the top, search for terminal.integrated.profiles.windows , and click Edit in settings.json . Now we'll define a new Cmder terminal profile and set Cmder as the default profile. First, add the line of code below to the second-to-last line . It tells VS Code to use Cmder as the default: \"terminal.integrated.defaultProfile.windows\" : \"Cmder\" , Then we need to describe how Cmder works. On line 4 , paste the following code: \"Cmder\" : { \"path\" : [ \"${env:windir}\\\\Sysnative\\\\cmd.exe\" , \"${env:windir}\\\\System32\\\\cmd.exe\" ], \"env\" : { \"CMDER_ROOT\" : \"${env:USERPROFILE}\\\\Desktop\\\\cmder\" }, \"args\" : [ \"/K\" , \"%CMDER_ROOT%\\\\vendor\\\\bin\\\\vscode_init.cmd\" ], \"icon\" : \"cmder\" , }, Change the \"CMDER_ROOT\": \"%userprofile%\\\\Desktop\\\\cmder\" section to point to where your Cmder actually lives. In this example, mine lives on the Desktop . If instead yours lived in the Documents folder, it would instead be \"CMDER_ROOT\": \"%userprofile%\\\\Documents\\\\cmder\" . Overall, your settings.json should look something like the code below. { \"terminal.integrated.profiles.windows\" : { \"Cmder\" : { \"path\" : [ \"${env:windir}\\\\Sysnative\\\\cmd.exe\" , \"${env:windir}\\\\System32\\\\cmd.exe\" ], \"env\" : { \"CMDER_ROOT\" : \"${env:USERPROFILE}\\\\Desktop\\\\cmder\" }, \"args\" : [ \"/K\" , \"%CMDER_ROOT%\\\\vendor\\\\bin\\\\vscode_init.cmd\" ], \"icon\" : \"cmder\" , }, \"PowerShell\" : { \"source\" : \"PowerShell\" , \"icon\" : \"terminal-powershell\" }, \"Command Prompt\" : { \"path\" : [ \"${env:windir}\\\\Sysnative\\\\cmd.exe\" , \"${env:windir}\\\\System32\\\\cmd.exe\" ], \"args\" : [], \"icon\" : \"terminal-cmd\" } }, \"terminal.integrated.defaultProfile.windows\" : \"Cmder\" , } If yours is giving you squiggly lines under the text, something's probably wrong! You can probably just cut and paste what's above and replace the whole settings.json . Save settings.json by selecting File > Save , then restart VS Code.","title":"Integrating Cmder with VS Code"},{"location":"setup/cmder-and-vs-code/#integrating-cmder-with-vs-code","text":"Windows only This is for Windows users only! All credit goes to Kelly Kiki for the walkthrough. We want to set Cmder as the default shell in VS Code. First, open up VS Code. Then click File (first tab on the top menu) > Preferences > Settings. Using the search bar up at the top, search for terminal.integrated.profiles.windows , and click Edit in settings.json . Now we'll define a new Cmder terminal profile and set Cmder as the default profile. First, add the line of code below to the second-to-last line . It tells VS Code to use Cmder as the default: \"terminal.integrated.defaultProfile.windows\" : \"Cmder\" , Then we need to describe how Cmder works. On line 4 , paste the following code: \"Cmder\" : { \"path\" : [ \"${env:windir}\\\\Sysnative\\\\cmd.exe\" , \"${env:windir}\\\\System32\\\\cmd.exe\" ], \"env\" : { \"CMDER_ROOT\" : \"${env:USERPROFILE}\\\\Desktop\\\\cmder\" }, \"args\" : [ \"/K\" , \"%CMDER_ROOT%\\\\vendor\\\\bin\\\\vscode_init.cmd\" ], \"icon\" : \"cmder\" , }, Change the \"CMDER_ROOT\": \"%userprofile%\\\\Desktop\\\\cmder\" section to point to where your Cmder actually lives. In this example, mine lives on the Desktop . If instead yours lived in the Documents folder, it would instead be \"CMDER_ROOT\": \"%userprofile%\\\\Documents\\\\cmder\" . Overall, your settings.json should look something like the code below. { \"terminal.integrated.profiles.windows\" : { \"Cmder\" : { \"path\" : [ \"${env:windir}\\\\Sysnative\\\\cmd.exe\" , \"${env:windir}\\\\System32\\\\cmd.exe\" ], \"env\" : { \"CMDER_ROOT\" : \"${env:USERPROFILE}\\\\Desktop\\\\cmder\" }, \"args\" : [ \"/K\" , \"%CMDER_ROOT%\\\\vendor\\\\bin\\\\vscode_init.cmd\" ], \"icon\" : \"cmder\" , }, \"PowerShell\" : { \"source\" : \"PowerShell\" , \"icon\" : \"terminal-powershell\" }, \"Command Prompt\" : { \"path\" : [ \"${env:windir}\\\\Sysnative\\\\cmd.exe\" , \"${env:windir}\\\\System32\\\\cmd.exe\" ], \"args\" : [], \"icon\" : \"terminal-cmd\" } }, \"terminal.integrated.defaultProfile.windows\" : \"Cmder\" , } If yours is giving you squiggly lines under the text, something's probably wrong! You can probably just cut and paste what's above and replace the whole settings.json . Save settings.json by selecting File > Save , then restart VS Code.","title":"Integrating Cmder with VS Code"},{"location":"setup/cmder/","text":"Installing Cmder \u00b6 Warning Cmder is for Windows users only . Installing \u00b6 You'll want to download Cmder from cmder.net . Be sure to download the Full Version . Once you've downloaded Cmder, right-click Cmder.zip and click Extract All to extract all of the files. When the extract menu comes up, check the box that says Show extracted files when complete . This saves us from having to double-click the folder it makes (I\u2019m lazy, you're lazy, we're all lazy!) When extraction is complete, you can run the Cmder file by double-clicking it. Now that we have it open, we're going to change some settings to make it perfect and nice and useful. Setting up Cmder \u00b6 Click the top-left corner of the Cmdr window, and select Settings . Now jump through a few steps: On the left-hand side, look under Startup and click Tasks Select {cmd::Cmder} on the left hand side Check the box for Default task for new console Click Startup dir\u2026 We\u2019re going to find our \"home directory,\" which is the directory with our name on it. Mine is in C:\\Users\\soma\\ , yours is probably somewhere similar. After you\u2019ve clicked it, select OK and then Save settings. Now close Cmder, and open it again. If everything went well, you\u2019ll see your home directory listed. See how mine is C:\\Users\\soma ? And if you type ls and press enter, you\u2019ll see a list of files and folders, including Downloads and Documents . If it doesn\u2019t work, make sure you closed Cmder and opened it again. Installing Cmder somewhere nice \u00b6 Keeping Cmder in our Downloads folder seems kind of weird, so let\u2019s move it somewhere more convenient. I\u2019m moving it to the Desktop , but you can put it anywhere you think is good. Just don't put it in Program Files , because Cmder hates spaces! Make sure you are using the cmder directory. Do not move the Cmder application or cmder.zip .","title":"Installing Cmder"},{"location":"setup/cmder/#installing-cmder","text":"Warning Cmder is for Windows users only .","title":"Installing Cmder"},{"location":"setup/cmder/#installing","text":"You'll want to download Cmder from cmder.net . Be sure to download the Full Version . Once you've downloaded Cmder, right-click Cmder.zip and click Extract All to extract all of the files. When the extract menu comes up, check the box that says Show extracted files when complete . This saves us from having to double-click the folder it makes (I\u2019m lazy, you're lazy, we're all lazy!) When extraction is complete, you can run the Cmder file by double-clicking it. Now that we have it open, we're going to change some settings to make it perfect and nice and useful.","title":"Installing"},{"location":"setup/cmder/#setting-up-cmder","text":"Click the top-left corner of the Cmdr window, and select Settings . Now jump through a few steps: On the left-hand side, look under Startup and click Tasks Select {cmd::Cmder} on the left hand side Check the box for Default task for new console Click Startup dir\u2026 We\u2019re going to find our \"home directory,\" which is the directory with our name on it. Mine is in C:\\Users\\soma\\ , yours is probably somewhere similar. After you\u2019ve clicked it, select OK and then Save settings. Now close Cmder, and open it again. If everything went well, you\u2019ll see your home directory listed. See how mine is C:\\Users\\soma ? And if you type ls and press enter, you\u2019ll see a list of files and folders, including Downloads and Documents . If it doesn\u2019t work, make sure you closed Cmder and opened it again.","title":"Setting up Cmder"},{"location":"setup/cmder/#installing-cmder-somewhere-nice","text":"Keeping Cmder in our Downloads folder seems kind of weird, so let\u2019s move it somewhere more convenient. I\u2019m moving it to the Desktop , but you can put it anywhere you think is good. Just don't put it in Program Files , because Cmder hates spaces! Make sure you are using the cmder directory. Do not move the Cmder application or cmder.zip .","title":"Installing Cmder somewhere nice"},{"location":"setup/install-jupyter/","text":"Installing and setting up Jupyter Notebook \u00b6 Checking your Python install \u00b6 You might want to start by running which python and python --version to make sure it looks like the \"right\" Python is being used. It is a pyenv Python, just like it should be? Does the version look good? If not, you'll want to check the Python installation guide . Install Jupyter \u00b6 You can install Jupyter Notebook with the following command: OS X Windows pip install jupyter pip install jupyter pyenv rehash It might be quick, it might be slow, but hopefully it eventually finishes without any errors! Don't worry if it yells WARN about pip versions or something, it's no big deal unless it actually says ERR or ERROR . Confirm it worked Run the following command to try to check Jupyer's version number. jupyter --version If it says \"command not found,\" it didn't work. If it says anything else, you're okay. Setting your Python as the Jupyter Python \u00b6 When you have multiple versions of Python on your computer, it turns out that sometimes the command line Python and the Jupyter Python don't match up. pip install ipykernel python -m ipykernel install --user Confirm it worked Run the following command to check the list of Pythons attached to Jupyter. jupyter kernelspec list --json Skim through the awful, awful bushel of text it presents to you. Do you see .pyenv somewhere in it? If so, it worked.","title":"Installing and setting up Jupyter Notebook"},{"location":"setup/install-jupyter/#installing-and-setting-up-jupyter-notebook","text":"","title":"Installing and setting up Jupyter Notebook"},{"location":"setup/install-jupyter/#checking-your-python-install","text":"You might want to start by running which python and python --version to make sure it looks like the \"right\" Python is being used. It is a pyenv Python, just like it should be? Does the version look good? If not, you'll want to check the Python installation guide .","title":"Checking your Python install"},{"location":"setup/install-jupyter/#install-jupyter","text":"You can install Jupyter Notebook with the following command: OS X Windows pip install jupyter pip install jupyter pyenv rehash It might be quick, it might be slow, but hopefully it eventually finishes without any errors! Don't worry if it yells WARN about pip versions or something, it's no big deal unless it actually says ERR or ERROR . Confirm it worked Run the following command to try to check Jupyer's version number. jupyter --version If it says \"command not found,\" it didn't work. If it says anything else, you're okay.","title":"Install Jupyter"},{"location":"setup/install-jupyter/#setting-your-python-as-the-jupyter-python","text":"When you have multiple versions of Python on your computer, it turns out that sometimes the command line Python and the Jupyter Python don't match up. pip install ipykernel python -m ipykernel install --user Confirm it worked Run the following command to check the list of Pythons attached to Jupyter. jupyter kernelspec list --json Skim through the awful, awful bushel of text it presents to you. Do you see .pyenv somewhere in it? If so, it worked.","title":"Setting your Python as the Jupyter Python"},{"location":"setup/install-python/","text":"Installing and setting up Python \u00b6 Prerequisites \u00b6 Open the command line \u00b6 First, you'll want to open up the command line. OS X Windows Click the magnifying glass to open up Spotlight, then search for Terminal . Run it. Find Cmder , which we set up before , and run it. Previously installed Pythons \u00b6 You can run the following command exactly as it is written below to list all of the Pythons your command line can see. which -a python If it says something like python not found , congratulations! You have zero Pythons installed! The first one in the list is the one that's used when python is typed. This is just for reference: copy and paste the results somewhere. If we run into problems later, it might help us figure out what's going on. OS X Windows That's it, you're good to go! Another option is to use the Start Menu to open up Add and Remove Programs . Scroll down to find anything starting with Python . If you find any, it might make sense to uninstall them now. I've especially had issues with old Python versions fighting new Python versions on Windows. Package manager \u00b6 One way to install software on your computer is to download software. Another way is to run commands on the command line, which uses a tool called a package manager . Since we think the command line is cool, we're going to use that technique. To do that we need to install some software that allows us to install software from the command line OS X Windows We'll be installing Homebrew from https://brew.sh/ . They have a long line of text on their homepage that you cut and paste into Terminal, but to make your life easy I've reproduced it here: /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" It might ask for your password by saying something like Password: [] . Type your computer password and press enter. If you type and type and nothing shows up... I promise, just type your password and hit enter! The command line is hiding your typing from anyone who might be looking at your screen. We'll be installing Scoop from https://scoop.sh/ . The front page isn't perfect, so I'll just copy the directions here: Use the Start Menu to open up Windows PowerShell. It's another command line! Windows is crazy! Copy and paste Set-ExecutionPolicy RemoteSigned -Scope CurrentUser into PowerShell and press enter. It will ask you if you want to change the \"Execution policy.\" Type Y and hit enter. Copy and paste irm get.scoop.sh | iex into PowerShell and press enter. Confirm it worked OS X Windows To confirm Homebrew was installed, type the following command to check the documentation for the brew command. brew help Did it work? Great, you're good to go. To confirm Scoop was installed, type the following command to check the documentation for the scoop command. scoop help Did it work? Great, you're good to go. Additional software \u00b6 For Homebrew (OS X) or Scoop (Windows) to work at their best, we need to install a couple other pieces of software with them. OS X Windows brew install readline xz scoop install 7zip innounp dark What do they do? Why do we ned them? Who knows, not me! It's just \u2728magic\u2728. Confirm it worked Skim over what's written in the last twenty or so lines of the command line. Do you see any errors? Any \"command not found?\" If not, you're probably okay. Installing a Python installer \u00b6 Now we're going to install the command pyenv . Pyenv allows us to juggle different Python versions easily. For example, maybe you normally use the newest version of Python because it has great features. But then one day your colleague sends you some awful code that only works on old old old Python! Pyenv makes that process simple. OS X Windows The traditional pyenv is for OS X only . Install by running the command below. brew install pyenv This step is only for people on OS X. Windows folks can skip ahead. Now we need to make sure pyenv sets itself up every single time we open up a command line. To do this, you need to figure out what specific kind of command line you're using. Run the following command to find out: echo $SHELL What did it print out? /bin/zsh /bin/bash Copy and paste the following command to add setup instructions to ~/.zshrc , the setup file for the Z shell. echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.zshrc echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.zshrc echo 'eval \"$(pyenv init -)\"' >> ~/.zshrc source ~/.zshrc Be sure to hit enter after the last one! Copy and paste the following command to add setup instructions to ~/.bash_profile , the setup file for the Bash shell. echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bash_profile echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bash_profile echo 'eval \"$(pyenv init -)\"' >> ~/.bash_profile source ~/.bash_profile Be sure to hit enter after the last one! pyenv for Windows is less popular than pyenv for OS X, but it works the same way. Install by running the command below. scoop install pyenv Confirm it worked To confirm pyenv was installed correctly, run the following command to ask for its documentation. pyenv help If it prints anything other than \"command not found\" you're good to go. Installing Python \u00b6 Installing Python 3.10.3 \u00b6 Python 3.10.4 is out now, but not everything seems to work with it . Instead we'll be going with 3.10.3. OS X Windows The command below will install Python 3.10.3. pyenv install 3.10.3 First, we'll update pyenv to know about all of the newer versions of Python. This might take a couple minutes \u2013 don't worry, it's working! Then we'll install the Python version we're looking for. pyenv update pyenv install 3.10.3 When you run the second command, it will pop open a Window about installing Python. Just agree to whatever it says! Info At the end of the installation there might be a button that says \"Disable PATH length limit.\" Click it and agree to the prompt. Confirm it worked Run the following command to see a list of versions installed by pyenv. pyenv versions You should see 3.10.3 . Setting 3.10.3 as the default Python \u00b6 Run the following command to use pyenv to set 3.10.3 as the default Python: pyenv global 3 .10.3 Now you should be all set! Confirm it worked First, run the following command to see a list of versions installed by pyenv. pyenv versions You should see 3.10.3 again, but this time it should have an asterisk next to it. To double check, next close your command line and open up a new one command line. Run the following command in the new terminal to check the version of the default Python: python --version It should print out Python 3.10.3 . Note that the command is python , space, hyphen, hyphen, version (it gets mistyped a lot!). You're all set! \u00b6 Congrats!","title":"Installing and setting up Python"},{"location":"setup/install-python/#installing-and-setting-up-python","text":"","title":"Installing and setting up Python"},{"location":"setup/install-python/#prerequisites","text":"","title":"Prerequisites"},{"location":"setup/install-python/#open-the-command-line","text":"First, you'll want to open up the command line. OS X Windows Click the magnifying glass to open up Spotlight, then search for Terminal . Run it. Find Cmder , which we set up before , and run it.","title":"Open the command line"},{"location":"setup/install-python/#previously-installed-pythons","text":"You can run the following command exactly as it is written below to list all of the Pythons your command line can see. which -a python If it says something like python not found , congratulations! You have zero Pythons installed! The first one in the list is the one that's used when python is typed. This is just for reference: copy and paste the results somewhere. If we run into problems later, it might help us figure out what's going on. OS X Windows That's it, you're good to go! Another option is to use the Start Menu to open up Add and Remove Programs . Scroll down to find anything starting with Python . If you find any, it might make sense to uninstall them now. I've especially had issues with old Python versions fighting new Python versions on Windows.","title":"Previously installed Pythons"},{"location":"setup/install-python/#package-manager","text":"One way to install software on your computer is to download software. Another way is to run commands on the command line, which uses a tool called a package manager . Since we think the command line is cool, we're going to use that technique. To do that we need to install some software that allows us to install software from the command line OS X Windows We'll be installing Homebrew from https://brew.sh/ . They have a long line of text on their homepage that you cut and paste into Terminal, but to make your life easy I've reproduced it here: /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" It might ask for your password by saying something like Password: [] . Type your computer password and press enter. If you type and type and nothing shows up... I promise, just type your password and hit enter! The command line is hiding your typing from anyone who might be looking at your screen. We'll be installing Scoop from https://scoop.sh/ . The front page isn't perfect, so I'll just copy the directions here: Use the Start Menu to open up Windows PowerShell. It's another command line! Windows is crazy! Copy and paste Set-ExecutionPolicy RemoteSigned -Scope CurrentUser into PowerShell and press enter. It will ask you if you want to change the \"Execution policy.\" Type Y and hit enter. Copy and paste irm get.scoop.sh | iex into PowerShell and press enter. Confirm it worked OS X Windows To confirm Homebrew was installed, type the following command to check the documentation for the brew command. brew help Did it work? Great, you're good to go. To confirm Scoop was installed, type the following command to check the documentation for the scoop command. scoop help Did it work? Great, you're good to go.","title":"Package manager"},{"location":"setup/install-python/#additional-software","text":"For Homebrew (OS X) or Scoop (Windows) to work at their best, we need to install a couple other pieces of software with them. OS X Windows brew install readline xz scoop install 7zip innounp dark What do they do? Why do we ned them? Who knows, not me! It's just \u2728magic\u2728. Confirm it worked Skim over what's written in the last twenty or so lines of the command line. Do you see any errors? Any \"command not found?\" If not, you're probably okay.","title":"Additional software"},{"location":"setup/install-python/#installing-a-python-installer","text":"Now we're going to install the command pyenv . Pyenv allows us to juggle different Python versions easily. For example, maybe you normally use the newest version of Python because it has great features. But then one day your colleague sends you some awful code that only works on old old old Python! Pyenv makes that process simple. OS X Windows The traditional pyenv is for OS X only . Install by running the command below. brew install pyenv This step is only for people on OS X. Windows folks can skip ahead. Now we need to make sure pyenv sets itself up every single time we open up a command line. To do this, you need to figure out what specific kind of command line you're using. Run the following command to find out: echo $SHELL What did it print out? /bin/zsh /bin/bash Copy and paste the following command to add setup instructions to ~/.zshrc , the setup file for the Z shell. echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.zshrc echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.zshrc echo 'eval \"$(pyenv init -)\"' >> ~/.zshrc source ~/.zshrc Be sure to hit enter after the last one! Copy and paste the following command to add setup instructions to ~/.bash_profile , the setup file for the Bash shell. echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bash_profile echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bash_profile echo 'eval \"$(pyenv init -)\"' >> ~/.bash_profile source ~/.bash_profile Be sure to hit enter after the last one! pyenv for Windows is less popular than pyenv for OS X, but it works the same way. Install by running the command below. scoop install pyenv Confirm it worked To confirm pyenv was installed correctly, run the following command to ask for its documentation. pyenv help If it prints anything other than \"command not found\" you're good to go.","title":"Installing a Python installer"},{"location":"setup/install-python/#installing-python","text":"","title":"Installing Python"},{"location":"setup/install-python/#installing-python-3103","text":"Python 3.10.4 is out now, but not everything seems to work with it . Instead we'll be going with 3.10.3. OS X Windows The command below will install Python 3.10.3. pyenv install 3.10.3 First, we'll update pyenv to know about all of the newer versions of Python. This might take a couple minutes \u2013 don't worry, it's working! Then we'll install the Python version we're looking for. pyenv update pyenv install 3.10.3 When you run the second command, it will pop open a Window about installing Python. Just agree to whatever it says! Info At the end of the installation there might be a button that says \"Disable PATH length limit.\" Click it and agree to the prompt. Confirm it worked Run the following command to see a list of versions installed by pyenv. pyenv versions You should see 3.10.3 .","title":"Installing Python 3.10.3"},{"location":"setup/install-python/#setting-3103-as-the-default-python","text":"Run the following command to use pyenv to set 3.10.3 as the default Python: pyenv global 3 .10.3 Now you should be all set! Confirm it worked First, run the following command to see a list of versions installed by pyenv. pyenv versions You should see 3.10.3 again, but this time it should have an asterisk next to it. To double check, next close your command line and open up a new one command line. Run the following command in the new terminal to check the version of the default Python: python --version It should print out Python 3.10.3 . Note that the command is python , space, hyphen, hyphen, version (it gets mistyped a lot!).","title":"Setting 3.10.3 as the default Python"},{"location":"setup/install-python/#youre-all-set","text":"Congrats!","title":"You're all set!"},{"location":"setup/intro/","text":"Introduction \u00b6 One of the most difficult things about getting started with programming and data analysis is setting up your computer . Computer setup is also one of the parts where you learn the most about how your computer works, so think of it more as a learning experience (with appropriate amounts of struggle) instead of simple preparation. What kind of system do you have? OS X Windows One more question for you: do you have an M1 machine? You can check by clicking the apple icon in the upper-left corner of your screen, and then selecting About This Mac . If it says \"M1\" anywhere in there, you have an M1. M1 macs are newer, faster, sleeker, and prone to installation problems. We'll work through them, though! Find other people who use Windows! Windows is a lot more flexible of a system, sold by many different people and places, and is build to support a lot of older pieces of software. As a result, there's a much winder range of settings on a Windows machine as compared to a Mac. With so many settings, you might run into issues that aren't covered in this guide! Leaning on other Windows folks to help think through problems is a great approach.","title":"Introduction"},{"location":"setup/intro/#introduction","text":"One of the most difficult things about getting started with programming and data analysis is setting up your computer . Computer setup is also one of the parts where you learn the most about how your computer works, so think of it more as a learning experience (with appropriate amounts of struggle) instead of simple preparation. What kind of system do you have? OS X Windows One more question for you: do you have an M1 machine? You can check by clicking the apple icon in the upper-left corner of your screen, and then selecting About This Mac . If it says \"M1\" anywhere in there, you have an M1. M1 macs are newer, faster, sleeker, and prone to installation problems. We'll work through them, though! Find other people who use Windows! Windows is a lot more flexible of a system, sold by many different people and places, and is build to support a lot of older pieces of software. As a result, there's a much winder range of settings on a Windows machine as compared to a Mac. With so many settings, you might run into issues that aren't covered in this guide! Leaning on other Windows folks to help think through problems is a great approach.","title":"Introduction"},{"location":"setup/software/","text":"Software to install \u00b6 Visual Studio Code \u00b6 First you'll want to download Visual Studio Code , a \"plain text editor.\" A plain text editor is used to reading and writing documents that don't have any formatting - no bold, no colors, no font choice. Just you and the text! Once you've downloaded Visual Studio Code, you'll want to set it up . Slack \u00b6 You'll probably want to download Slack . Here are links for Windows and Mac . Once you've got set up, you might want to check out a little Slack how-to guide to become familiar with how it works.","title":"Software to install"},{"location":"setup/software/#software-to-install","text":"","title":"Software to install"},{"location":"setup/software/#visual-studio-code","text":"First you'll want to download Visual Studio Code , a \"plain text editor.\" A plain text editor is used to reading and writing documents that don't have any formatting - no bold, no colors, no font choice. Just you and the text! Once you've downloaded Visual Studio Code, you'll want to set it up .","title":"Visual Studio Code"},{"location":"setup/software/#slack","text":"You'll probably want to download Slack . Here are links for Windows and Mac . Once you've got set up, you might want to check out a little Slack how-to guide to become familiar with how it works.","title":"Slack"},{"location":"setup/utf-8/","text":"Enabling UTF-8 support on the command line \u00b6 When we're using the command line, we might assume that we can type just about anything. We might want to type things like: cupcakes cr\u00e8me br\u00fbl\u00e9e \u30a2\u30a4\u30b9\u30af\u30ea\u30fc\u30e0 \u0448\u043e\u043a\u043e\u043b\u0430\u0434 \ud83c\udf69\ud83c\udf69\ud83c\udf69 That's freedom, right? But it turns out you probably can't type all of those things! Your computer might be only set up for English text, or maybe it doesn't like accent marks or Japanese, or maybe \ud83c\udf70 or \ud83c\udf66 or \ud83c\udf6d are just too much for it to handle! Computers that only really understand English and Western European languages are set up with something called Latin-1 , which is a very short list of characters that can be displayed. To make sure our command line can understand (and display) all text around the world \u2013 plus emoji \u2013 we're going to set up a super long list of characters UTF-8 . Setting up UTF-8 support on OS X \u00b6 OS X by default supports UTF-8 in the command line. But\u2026 sometimes it doesn\u2019t? So we\u2019ll add a few commands that will run every time you start the shell that forces UTF-8. For the commands below: if you\u2019re typing instead of cutting and pasting, make sure you use >> \u2014 two greater-than symbols \u2014 not \u00bb . Also, be sure to hit enter after pasting in the second line. To start, type echo $SHELL and press enter. If it says /bin/zsh run the following command: echo 'export LC_ALL=en_US.UTF-8' >> ~/.zshrc echo 'export LANG=en_US.UTF-8' >> ~/.zshrc But it says /bin/bash run the following commands: echo 'export LC_ALL=en_US.UTF-8' >> ~/.bash_profile echo 'export LANG=en_US.UTF-8' >> ~/.bash_profile If you do it right, it won\u2019t say anything. But I promise it worked! Setting up UTF-8 support on Cmder in Windows \u00b6 To see why we need UTF-8 support on Cmder in Windows, run this command from the command line: curl https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt Ugly, right? Let's fix it! Open up Settings again by clicking on the top left-hand corner of the Cmder window and going to Startup > Environment . In the big box, add a new line that includes the following: chcp utf-8 Once that's done, save your settings. To test that it worked, open up a new Cmder window and run the command again: curl https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt Nice and fun, right? That's the beauty of UTF-8!","title":"Enabling UTF-8 support on the command line"},{"location":"setup/utf-8/#enabling-utf-8-support-on-the-command-line","text":"When we're using the command line, we might assume that we can type just about anything. We might want to type things like: cupcakes cr\u00e8me br\u00fbl\u00e9e \u30a2\u30a4\u30b9\u30af\u30ea\u30fc\u30e0 \u0448\u043e\u043a\u043e\u043b\u0430\u0434 \ud83c\udf69\ud83c\udf69\ud83c\udf69 That's freedom, right? But it turns out you probably can't type all of those things! Your computer might be only set up for English text, or maybe it doesn't like accent marks or Japanese, or maybe \ud83c\udf70 or \ud83c\udf66 or \ud83c\udf6d are just too much for it to handle! Computers that only really understand English and Western European languages are set up with something called Latin-1 , which is a very short list of characters that can be displayed. To make sure our command line can understand (and display) all text around the world \u2013 plus emoji \u2013 we're going to set up a super long list of characters UTF-8 .","title":"Enabling UTF-8 support on the command line"},{"location":"setup/utf-8/#setting-up-utf-8-support-on-os-x","text":"OS X by default supports UTF-8 in the command line. But\u2026 sometimes it doesn\u2019t? So we\u2019ll add a few commands that will run every time you start the shell that forces UTF-8. For the commands below: if you\u2019re typing instead of cutting and pasting, make sure you use >> \u2014 two greater-than symbols \u2014 not \u00bb . Also, be sure to hit enter after pasting in the second line. To start, type echo $SHELL and press enter. If it says /bin/zsh run the following command: echo 'export LC_ALL=en_US.UTF-8' >> ~/.zshrc echo 'export LANG=en_US.UTF-8' >> ~/.zshrc But it says /bin/bash run the following commands: echo 'export LC_ALL=en_US.UTF-8' >> ~/.bash_profile echo 'export LANG=en_US.UTF-8' >> ~/.bash_profile If you do it right, it won\u2019t say anything. But I promise it worked!","title":"Setting up UTF-8 support on OS X"},{"location":"setup/utf-8/#setting-up-utf-8-support-on-cmder-in-windows","text":"To see why we need UTF-8 support on Cmder in Windows, run this command from the command line: curl https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt Ugly, right? Let's fix it! Open up Settings again by clicking on the top left-hand corner of the Cmder window and going to Startup > Environment . In the big box, add a new line that includes the following: chcp utf-8 Once that's done, save your settings. To test that it worked, open up a new Cmder window and run the command again: curl https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt Nice and fun, right? That's the beauty of UTF-8!","title":"Setting up UTF-8 support on Cmder in Windows"},{"location":"setup/vs-code/","text":"Setting up Visual Studio Code \u00b6 Installing recommended software \u00b6 Any time VS Code helpfully suggests that it can install something, just say yes! Python support, a linter, extensions to help you with such-and-such filetype, you don't need to know what it's for, just trust that VS Code is probably giving you good advice. The code command \u00b6 There's a magic command called code that you can install through VS Code. Open the Command Palette by pressing Cmd+Shift+P and type shell command to filter the big long list of commands. Click Shell Command: Install 'code' command in PATH to... install the code command! That's it, you're done! If you have a command line open you'll need to restart it, though. The settings menu \u00b6 The settings menu allows you to adjust how VS Code works. There are a lot of them, so it's a great place to become acquainted with. OS X Windows You can get to the settings menu by going to the top menu and selecting Code > Preferences > Settings . You can get to the settings menu by going to the top menu and selecting File > Preferences > Settings . To search, you just type in the search bar at the top and the list of settings is filtered. Disable autocomplete on enter \u00b6 Sometimes VS Code tries to be a little too helpful in suggesting code to you. This turns that off. Search in settings for enter . Set Editor: Accept Suggestions on Enter to off . Set tabs as spaces \u00b6 This one should already be set up, but we can make sure. Search for tab space . Make sure Editor: Insert Spaces is checked. CAN YOU TRUST THIS FOLDER? \u00b6 VS Code likes to ask if you can trust the files you're opening. Yes, you can! If you get irritated that it keeps asking again and again and again, we can completely disable the prompt: Search in settings for trust . Under Security > Workspace > Trust , make sure \"Controls whether or not workspace trust is enabled within VS Code\" is unchecked . What else? \u00b6 You might find these links useful: Getting Started with the VS Code visual interface More user/workspace settings","title":"Setting up Visual Studio Code"},{"location":"setup/vs-code/#setting-up-visual-studio-code","text":"","title":"Setting up Visual Studio Code"},{"location":"setup/vs-code/#installing-recommended-software","text":"Any time VS Code helpfully suggests that it can install something, just say yes! Python support, a linter, extensions to help you with such-and-such filetype, you don't need to know what it's for, just trust that VS Code is probably giving you good advice.","title":"Installing recommended software"},{"location":"setup/vs-code/#the-code-command","text":"There's a magic command called code that you can install through VS Code. Open the Command Palette by pressing Cmd+Shift+P and type shell command to filter the big long list of commands. Click Shell Command: Install 'code' command in PATH to... install the code command! That's it, you're done! If you have a command line open you'll need to restart it, though.","title":"The code command"},{"location":"setup/vs-code/#the-settings-menu","text":"The settings menu allows you to adjust how VS Code works. There are a lot of them, so it's a great place to become acquainted with. OS X Windows You can get to the settings menu by going to the top menu and selecting Code > Preferences > Settings . You can get to the settings menu by going to the top menu and selecting File > Preferences > Settings . To search, you just type in the search bar at the top and the list of settings is filtered.","title":"The settings menu"},{"location":"setup/vs-code/#disable-autocomplete-on-enter","text":"Sometimes VS Code tries to be a little too helpful in suggesting code to you. This turns that off. Search in settings for enter . Set Editor: Accept Suggestions on Enter to off .","title":"Disable autocomplete on enter"},{"location":"setup/vs-code/#set-tabs-as-spaces","text":"This one should already be set up, but we can make sure. Search for tab space . Make sure Editor: Insert Spaces is checked.","title":"Set tabs as spaces"},{"location":"setup/vs-code/#can-you-trust-this-folder","text":"VS Code likes to ask if you can trust the files you're opening. Yes, you can! If you get irritated that it keeps asking again and again and again, we can completely disable the prompt: Search in settings for trust . Under Security > Workspace > Trust , make sure \"Controls whether or not workspace trust is enabled within VS Code\" is unchecked .","title":"CAN YOU TRUST THIS FOLDER?"},{"location":"setup/vs-code/#what-else","text":"You might find these links useful: Getting Started with the VS Code visual interface More user/workspace settings","title":"What else?"}]}